@<author>{おでん}

= 遺伝的プログラミングで目指せ5000兆円
//lead{
この記事では，遺伝的プログラミングを用いて投資戦略の生成を試みる．
//}

== はじめに
全人類が欲しいもの，それは5000兆円である．それは自明として，5000兆円を目指す第一歩として我々は何をしたらいいだろうか．宝くじ？神頼み？ 様々あるだろうが，投資も1つの選択肢であろう．現在，東京証券取引所では毎日株券だけで3兆円程度の金額がやりとりされており，3兆円のほんの一部ですら頂かないのは勿体ないのではないだろうか．しかし，投資というとFXで1000万溶かした話など，一般的には危険なイメージがあるかもしれない．また，そもそもどのように投資すればいいのか分からないということもあるだろう．それならば，適切な金額をコンピュータに任せ，自動でトレードさせてしまえばいいという考えが生まれる．

この考えが生まれた際に最大の問題となるのが，「どのような戦略でトレードをすればいいか」ということになる．やっぱり投資のことはよく分からないし諦めるしかないか・・・．諦めるのはまだ早い．投資戦略すらもコンピュータを使って自動で生成させてしまえばいいではないか！

この記事では，進化計算の一種である遺伝的プログラミング(Genetic Programming:GP)を用い，システムトレードの第一歩として，FXで稼げそうな投資戦略を作り出すことを目的とする．

なお，様々な本にも書いてあるが，ここでも一応記しておこう．
//caution[ ]{ 
	@<b>{ここで紹介している方法，指標で必ず儲かるということは一切保証していない．また，ここで示した方法を参考にして売買し，何らかの損失を被ったとしても，私は一切の責任を負わない．}
//}

== 遺伝的プログラミング
遺伝的プログラミングは，進化計算の一種であり，遺伝的アルゴリズム(Genetic Algorithm:GA)を拡張したものとされる．GAでは個体は配列，ベクトルで表現されるが，GPでは個体は一般的に
木構造で表現されるのが特徴である．

=== 個体表現
1つの個体は木構造で表現され，各個体は評価値を持つ．木構造により，GAでは不可能であった構造的な表現が可能となる．@<img>{GP_Tree}に具体的な個体の例を示す．
GAでは扱うことのできなかった論理式や関数，プログラムを表現することが可能となっている．

//image[GP_Tree][GPの個体表現の例][scale=0.8]

=== 複製選択
GPでは，後で述べる進化オペレータによって子個体を生成するが，その子個体を作るために親を選択する必要がある．このことを@<b>{複製選択}という．

複製選択にはいくつか種類があり，有名なのは以下の2つである．

 * @<b>{ルーレット選択}： 
 
 評価値の大きさに従って，集団内から個体を選択する方法．評価値が悪い個体も選ばれやすい．
 * @<b>{トーナメント選択}:
 
 集団内からランダムに個体を一定数抽出し，その中で最も評価値が良い個体を選択する方法．抽出する個体が多くなると，評価値が悪い個体は選ばれにくい．

=== 進化オペレータ
現世代の個体からより良い個体を生成するために，個体に対して進化オペレータを適用する．進化オペレータとして，生物が交配によって子孫を残すことをモデル化した交叉と，生物に見られる遺伝子の突然変異をモデル化した突然変異が主に用いられる．

==== 交叉
遺伝的プログラミングにおける交叉は，2つの親の部分木を入れ替える部分木交叉が用いられる．
具体的には，@<img>{XO}に示すように，部分木交叉は，親1 と親2 の交叉点をランダムに選択し，その交叉点以下の部分木を親1 と親2 で入れ替えるというオペレータである．

//image[XO][交叉][scale=0.6]

==== 突然変異
突然変異は，部分木を別の木と入れ替えるオペレータである．@<img>{Mut}に示すように，ランダムに突然変異点を選択し，その突然変異点以下の部分木を新たに生成した木と入れ替える．突然変異により，局所解から脱却することを目指している．

//image[Mut][交叉][scale=0.3]

=== 全体の流れ


== 投資の心得

== 実験

=== 実験1

=== 実験2

== おわりに

